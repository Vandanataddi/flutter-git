def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '2.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
//        applicationId "com.flexi.flexi_profiler"
//        applicationId "com.flexi.microlabs"
//        applicationId "com.flexi.rezmytrip"
        minSdkVersion 26
        targetSdkVersion 30
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    splits {
        abi {
            enable false
            reset()
            include 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            universalApk true
        }
    }
    flavorDimensions "app"
    productFlavors {
        microlabs {
            dimension "app"
            applicationId "com.flexi.microlabs"
            versionCode 1
            versionName "1.1"
            manifestPlaceholders = [app_name      : "@string/app_name_micro",
                                    app_icon      : "@drawable/app_icon",
                                    app_icon_round: "@drawable/app_icon_round"
            ]
        }

        rezmytrip {
            dimension "app"
            applicationId "com.flexi.rezmytrip"
            versionCode 1
            versionName "1.0.0"
            manifestPlaceholders = [app_name      : "@string/app_name_rmt",
                                    app_icon      : "@drawable/rmt_icon",
                                    app_icon_round: "@drawable/rmt_icon_round"
            ]
        }

//        olcare {
//            dimension "app"
//            applicationId "com.flexi.olcare"
//            versionCode 1
//            versionName "1.0.0"
//            manifestPlaceholders = [app_name      : "@string/app_name_olcare",
//                                    app_icon      : "@drawable/app_icon",
//                                    app_icon_round: "@drawable/app_icon_round"
//            ]
//        }
//
//        foodapp {
//            dimension "app"
//            applicationId "com.flexi.foodapp"
//            versionCode 1
//            versionName "1.0"
//            manifestPlaceholders = [app_name      : "@string/app_name_foodapp",
//                                    app_icon      : "@drawable/app_icon",
//                                    app_icon_round: "@drawable/app_icon_round"
//            ]
//        }
//
//        whitegoods {
//            dimension "app"
//            applicationId "com.flexi.whitegoods"
//            versionCode 1
//            versionName "1.0"
//            manifestPlaceholders = [app_name      : "@string/app_name_whitegoods",
//                                    app_icon      : "@drawable/app_icon",
//                                    app_icon_round: "@drawable/app_icon_round"
//            ]
//        }
//
//        fmcg {
//            dimension "app"
//            applicationId "com.flexi.fmcg"
//            versionCode 1
//            versionName "1.0"
//            manifestPlaceholders = [app_name      : "@string/app_name_fmcg",
//                                    app_icon      : "@drawable/app_icon",
//                                    app_icon_round: "@drawable/app_icon_round"
//            ]
//        }

        heko {
            dimension "app"
            applicationId "com.flexi.heko"
            versionCode 1
            versionName "1.0"
            manifestPlaceholders = [app_name      : "@string/app_name_heko",
                                    app_icon      : "@drawable/app_icon",
                                    app_icon_round: "@drawable/app_icon_round"
            ]
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.firebase:firebase-inappmessaging-display:19.0.4'
//    implementation "androidx.core:core-ktx:1.6.0"
}
apply plugin: 'com.google.gms.google-services'